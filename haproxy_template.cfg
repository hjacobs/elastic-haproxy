# this is an example haproxy.cfg Jinja2 template
# see http://jinja.pocoo.org/
global
    maxconn 50000
    nbproc 8
    tune.ssl.default-dh-param 2048

    # https://mozilla.github.io/server-side-tls/ssl-config-generator/
    ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
    ssl-default-bind-options no-tls-tickets

defaults
    mode http
    timeout connect 1s
    timeout client  1s
    timeout server  1s
    timeout tunnel  1h
    option dontlog-normal
    option http-keep-alive

frontend https
    bind *:443 ssl crt /usr/local/etc/haproxy/haproxy.pem no-sslv3 no-tlsv10
    default_backend servers

frontend stats
    bind *:9090 process 1
    stats enable
    stats uri /

backend servers
    option httpchk GET /health
    {% for server in servers %}
    server server-{{ loop.index }} {{ server }}:8080 check
    {% endfor %}
